<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="add_more_ussd_after" xml:space="preserve">
    <value>Add a USSD below</value>
  </data>
  <data name="auto_off" xml:space="preserve">
    <value>Disabled auto</value>
  </data>
  <data name="auto_on" xml:space="preserve">
    <value>Enabled auto</value>
  </data>
  <data name="balance" xml:space="preserve">
    <value>Balance :</value>
  </data>
  <data name="busy_or_no_carrier" xml:space="preserve">
    <value>BUSY OR NO CARRIER</value>
  </data>
  <data name="cannot_check_version" xml:space="preserve">
    <value>Please update the newest version, Hotline 0917.111.666</value>
  </data>
  <data name="check_excel_file" xml:space="preserve">
    <value>Please check the excel file!</value>
  </data>
  <data name="choose_sim_dashboard_to_use" xml:space="preserve">
    <value>Please choose sim to use feature (Hold ctrl or shift to select multiple rows)</value>
  </data>
  <data name="comfirm" xml:space="preserve">
    <value>Comfirm</value>
  </data>
  <data name="comfirm_reset_all_result" xml:space="preserve">
    <value>All result will be reset, are you sure to continue?</value>
  </data>
  <data name="connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="custom_prefix_port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="delete_all" xml:space="preserve">
    <value>Delete all</value>
  </data>
  <data name="disconnected" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="empty_feedback" xml:space="preserve">
    <value>Please input the content to feedback!</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="error_read_another_soft" xml:space="preserve">
    <value>Error when reading file, please choose another file or close the file in other softwares.</value>
  </data>
  <data name="fail" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="import_success" xml:space="preserve">
    <value>Import successfully, {0} empty records or port invalid</value>
  </data>
  <data name="info" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="input_phone_number" xml:space="preserve">
    <value>Input phone number </value>
  </data>
  <data name="invalid_login" xml:space="preserve">
    <value>Fail, please check the username and password</value>
  </data>
  <data name="in_queue" xml:space="preserve">
    <value>In queue...</value>
  </data>
  <data name="is_bought_modem" xml:space="preserve">
    <value>Bought modem</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="logining" xml:space="preserve">
    <value>Signing in ....</value>
  </data>
  <data name="login_subscription" xml:space="preserve">
    <value>Please buy a subscription package before use this tool</value>
  </data>
  <data name="newer_version" xml:space="preserve">
    <value>A newer version of client available, please goto lamsim.biz to download and install the newest version. Thank you! Hotline 0917.111.666</value>
  </data>
  <data name="not_bought_modem" xml:space="preserve">
    <value>Not bought modem</value>
  </data>
  <data name="no_found_port" xml:space="preserve">
    <value>No found COM Port</value>
  </data>
  <data name="no_subscription_permission" xml:space="preserve">
    <value>Please upgrade the subscription to use this feature</value>
  </data>
  <data name="port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="processed" xml:space="preserve">
    <value>Processed</value>
  </data>
  <data name="processing" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="question_comfirm_delete_all" xml:space="preserve">
    <value>Are you sure to delete all?</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="saved" xml:space="preserve">
    <value>Saved</value>
  </data>
  <data name="sms_error_connection" xml:space="preserve">
    <value>Phone/GSM connection error</value>
  </data>
  <data name="sms_error_send" xml:space="preserve">
    <value>Send SMS error</value>
  </data>
  <data name="sms_success_no_state" xml:space="preserve">
    <value>Success, unknown received status</value>
  </data>
  <data name="success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="thanks_feedback" xml:space="preserve">
    <value>Thank to your feedback!\n We will reply you in near time!</value>
  </data>
  <data name="wait_update_imei" xml:space="preserve">
    <value>Please wait a minute to update IMEI device</value>
  </data>
  <data name="wait_upload_file" xml:space="preserve">
    <value>Please wait the modem uploaded completely! Transfering file can be slow because of interacting with hardware devices. You mustn't do any features when uploading</value>
  </data>
  <data name="warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="warning_consume_condition" xml:space="preserve">
    <value>Please check use modem 4G to use this feature</value>
  </data>
</root>